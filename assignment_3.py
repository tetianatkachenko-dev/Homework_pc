list_for_tasks = [1, 2, 5, 8, 9, 6, 3, 11, 10, -8, -6, -3]

# PRIMARY LEVEL

# Task 1

print(f'–°—É–º–∞ —á–∏—Å–µ–ª —Å–ø–∏—Å–∫—É: {sum(list_for_tasks)}')

# Task 2

print(f'–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ —á–∏—Å–ª–æ —Å–ø–∏—Å–∫—É: {min(list_for_tasks)}')

# Task 3

list_for_tasks.reverse()
print(f'–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∏–π —Å–ø–∏—Å–æ–∫: {list_for_tasks}')

# Task 4

list_for_task_4 =[]

for i in range(len(list_for_tasks)):
    if list_for_tasks[i] % 2 != 0:
        list_for_task_4.append(list_for_tasks[i])

print(f'–ù–µ–ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –∑—ñ —Å–ø–∏—Å–∫—É: {list_for_task_4}')

# Task 5

x = int(input("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –Ω–∞ —è–∫–µ –±—É–¥–µ–º–æ –º–Ω–æ–∂–∏—Ç–∏ —Å–ø–∏—Å–æ–∫: "))
list_for_task_5 = []

for i in range(len(list_for_tasks)):
    list_for_task_5.append(list_for_tasks[i] * x)

print(f'–ï–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∑ —ñ—Å–Ω—É—é—á–æ–≥–æ —Å–ø–∏—Å–∫—É –ø–æ–º–Ω–æ–∂–µ–Ω—ñ –Ω–∞ {x}: {list_for_task_5}')

# EASY LEVEL

# Task 1

x_2 = int(input("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ —è–∫–æ–≥–æ –º–∞—é—Ç—å –±—É—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–ø–∏—Å–∫—É: "))
list_for_task_6 = []

for i in range(len(list_for_tasks)):
    if list_for_tasks[i] > x_2:
        list_for_task_6.append(list_for_tasks[i])

print(f'–ï–ª–µ–º–µ–Ω—Ç–∏ —Å–ø–∏—Å–∫—É –±—ñ–ª—å—à—ñ –∑–∞ {x_2}: {list_for_task_6}')

# Task 2

list_for_task_7 = []

for i in range(len(list_for_tasks)):
    if list_for_tasks[i] > 0:
        list_for_task_7.append(list_for_tasks[i])
        average = sum(list_for_task_7)/len(list_for_task_7)

print(f'–°–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å —Å–ø–∏—Å–∫—É: {average}')

# Task 3

list_for_task_8 = []

for i in list_for_tasks:
    if i not in list_for_task_8 and i != x_2:
        list_for_task_8.append(i)

print(f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —É —Å–ø–∏—Å–∫—É: {max(list_for_task_8)}')

# Task 4

y = int(input("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ, —è–∫–∏–º –±—É–¥–µ–º–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–ø–∏—Å–∫—É: "))
list_for_task_9 = []

for i in list_for_tasks:
    if i in list_for_tasks and i % y == 0:
        list_for_task_9.append(i)

print(f'–°—É–º–∞ —á–∏—Å–µ–ª, —è–∫—ñ –¥—ñ–ª—è—Ç—å—Å—è –Ω–∞ {y}: {sum(list_for_task_9)}')

# Task 5

list_for_task_10 = []

for i in list_for_tasks:
    list_for_task_10.append(i ** 2)

print(f'–°–ø–∏—Å–æ–∫ –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —ñ—Å–Ω—É—é—á–æ–≥–æ —Å–ø–∏—Å–∫–∞: {list_for_task_10}')

# Task 6

list_for_task_11 = []

for i in list_for_tasks:
    if i > 0:
        list_for_task_11.append(i)

print(f'–î–æ–¥–∞—Ç–Ω—ñ —á–∏—Å–ª–∞ –∑—ñ —Å–ø–∏—Å–∫—É: {list_for_task_11}')

# Task 7

prefics = input("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–µ—Ñ—ñ–∫—Å, –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–æ–≥–æ –±—É–¥–µ–º–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Å–ª–æ–≤–∞ (such as un, re, pre, mis, dis, over, under): ")
list_of_words = ["unhappy", "unfair", "unlock", "redo", "rewrite", "level", "hello", "world", "madam", "python", "noon", "replay", "preview", "predict", "preheat", "misplace", "mislead", "disconnect", "disagree", "dislike", "overthink", "overwork", "oversleep", "understand", "underrate"] #this list was generated by chat gpt
same_prefics = []

for i in list_of_words:
    if prefics in i:
        same_prefics.append(i)

print(f'–°–ª–æ–≤–∞ –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º {prefics}: {same_prefics}')

# Task 8

n = int(input("C–∫—ñ–ª—å–∫–∏ –ø–µ—Ä—à–∏—Ö —á–∏—Å–µ–ª —Å–ø–∏—Å–∫—É –≤–∏ —Ö–æ—á–µ—Ç–µ —Å—É–º—É–≤–∞—Ç–∏: "))
list_for_task_13 = []

for i in range(len(list_for_tasks)):
    if i <= (n - 1):
        list_for_task_13.append(list_for_tasks[i])

print(f'–°—É–º–∞ –ø–µ—Ä—à–∏—Ö {n} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Å–ø–∏—Å–∫—É: {sum(list_for_task_13)}')

# Task 9

list_for_task_14 = []

for i in list_of_words:
    if i == i[:: -1]:
        list_for_task_14.append(i)

print(f'–°–ø–∏—Å–∫–∏ –≤—Å—ñ—Ö –ø–∞–ª—ñ–Ω–¥—Ä–æ–º—ñ–≤: {list_for_task_14}')

# Task 10

div = int(input("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –Ω–∞ —è–∫–µ –±—É–¥–µ–º–æ –¥—ñ–ª–∏—Ç–∏: "))
list_for_task_15 = []

for i in list_for_tasks:
    if i % div == 0:
        list_for_task_15.append(True)
    else:
        list_for_task_15.append(False)

print(f'–ï–ª–µ–º–µ–Ω—Ç–∏ —Å–ø–∏—Å–∫—É, —è–∫—ñ –¥—ñ–ª—è—Ç—å—Å—è –Ω–∞ {div}: {list_for_task_15}')

# MEDIUM LEVEL

# Task 1

x_16 = int(input("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ, –Ω–∞ —è–∫–µ –º–∞—î –¥—ñ–ª–∏—Ç–∏—Å—è –µ–ª–µ–º–µ–Ω—Ç: "))
y_16 = int(input("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª, –Ω–∞ —è–∫–µ –Ω–µ –º–∞—î –¥—ñ–ª–∏—Ç–∏—Å—è –µ–ª–µ–º–µ–Ω—Ç: "))
list_for_task_16 = []

for i in list_for_tasks:
    if i % x == 0 and i % y != 0:
        list_for_task_16.append(i)

print(f'–ï–ª–µ–º–µ–Ω—Ç–∏ —Å–ø–∏—Å–∫—É, —è–∫—ñ –¥—ñ–ª—è—Ç—å—Å—è –Ω–∞ {x_16} —ñ –Ω–µ –¥—ñ–ª—è—Ç—å—Å—è –Ω–∞ {y_16}: {list_for_task_16}')

# Task 2

nested_list = [[1, 2, 8], [4, 7, 3], [], [9, 0], [-1, 90, 5, -11]]
list_for_task_17 = []

for i in nested_list:
    for it in i:
        list_for_task_17.append(it)

print(f'–ó–≤–µ–¥–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É {nested_list} –≤ —î–¥–∏–Ω–∏–π —Å–ø–∏—Å–æ–∫: {list_for_task_17}')

# Task 3

# –°–ø–∏—Å–æ–∫ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é chat gpt

list_with_phrases = ["GoBigOrGoHome", "noWorriesMate", "STaYStrong", "KeepItUP", "simpletest", "HELLOworld"]
list_with_uc = []

for i in list_with_phrases:
    tstring = ""
    for letter in i:
        if letter.isupper() == True:
            tstring += letter
            list_with_uc.append(tstring)

print(f'–û–∫—Ä–µ–º–∏–π —Å–ø–∏—Å–æ–∫ –∑—ñ —Å–ø–∏—Å–∫—É {list_with_phrases} –∑ –≤–µ–ª–∏–∫–∏–º–∏ –ª—ñ—Ç–µ—Ä–∞–º–∏ –≤ –ø—ñ–¥—Ä—è–¥–∫–∞—Ö: {list_with_uc}')

# Task 4

list_for_tasks.sort()
print(f'–í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫: {list_for_tasks}')

# Task 5

# –≤ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ –±—É–ª–æ –± –¥—É—É—É—É–∂–µ –∫–æ—Ä–∏—Å–Ω–æ, —è–∫–±–∏ –Ω–∞–º –¥–∞–ª–∏ —á—ñ—Ç–∫—É —É–º–æ–≤—É, –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —è–∫–æ—ó –º–∏ –º–∞—î–º–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ –∫–æ–¥. –ê–ª–µ —á–µ—Ä–µ–∑ —Ç–µ, —â–æ —Ü—å–æ–≥–æ –Ω–µ —Å—Ç–∞–ª–æ—Å—è - –º–µ–Ω—ñ –¥–æ–≤–µ–ª–æ—Å—å –Ω–∞–ø—Ä—è–≥—Ç–∏ chat gpt. 
# –£–º–æ–≤–∞ –≤—ñ–¥ cgat gpt: –Ø–∫—â–æ —á–∏—Å–ª–æ –ø–∞—Ä–Ω–µ ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π –π–æ–≥–æ –∑—ñ —Å–ø–∏—Å–∫—É —á–∏—Å–µ–ª. –Ø–∫—â–æ –Ω–µ–ø–∞—Ä–Ω–µ ‚Äî –∑–∞–º—ñ—Å—Ç—å –Ω—å–æ–≥–æ –≤—Å—Ç–∞–≤ —Å–ª–æ–≤–æ –∑ –¥—Ä—É–≥–æ–≥–æ —Å–ø–∏—Å–∫—É (–Ω–∞ —Ç—ñ–π —Å–∞–º—ñ–π –ø–æ–∑–∏—Ü—ñ—ó).

list_for_task_20 = []

for i in range(len(list_for_tasks)):
    if list_for_tasks[i] % 2 == 0:
        list_for_task_20.append(list_for_tasks[i])
    else:
        list_for_task_20.append(list_of_words[i])

print(f'–°–ø–∏—Å–æ–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —É–º–æ–≤: {list_for_task_20}')

# Task 6

# –î–ª—è —Ç–æ–≥–æ, —â–æ–± –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —â–æ —Ç–∞–∫–µ –∞–≥—Ä–µ–≥–∞—Ü—ñ—è —Å–ª–æ–≤–Ω–∏–∫–∞ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∞ chat gpt. –°–ª–æ–≤–Ω–∏–π –Ω–∏–∂—á–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –Ω—å–æ–≥–æ.

dict_sales = [
    {"store": "A", "revenue": 200},
    {"store": "B", "revenue": 150},
    {"store": "A", "revenue": 100},
    {"store": "C", "revenue": 250},
    {"store": "B", "revenue": 200}
]
dict_results = {}

for i in dict_sales:
    if i["store"] in dict_results:
        dict_results[i["store"]] += i["revenue"]  
    else:
        dict_results[i["store"]] = i["revenue"]  

print(f'–°–ª–æ–≤–Ω–∏–∫ —ñ–∑ —Å—É–º–æ—é –∑–Ω–∞—á–µ–Ω—å –∑–∞ –∫–ª—é—á–µ–º: {dict_results}')

# Task 7

# –ó–Ω–æ–≤—É –±—É–ª–æ –± –∫—Ä—É—Ç–æ, —è–∫–±–∏ –±—É–ª–æ —á—ñ—Ç–∫–∞ —É–º–æ–≤–∞, –∞–ª–µ —á–µ—Ä–µ–∑ —Ç–µ, —â–æ —ó—ó –Ω–µ–º–∞—î - —è –ø–æ–ø—Ä–æ—Å–∏–ª–∞ chat gpt —ó—ó –ø—Ä–∏–¥—É–º–∞—Ç–∏.
# –£–º–æ–≤–∞ –≤—ñ–¥ chat gpt: –Ø–∫—â–æ —á–∏—Å–ª–æ –º–µ–Ω—à–µ –Ω—É–ª—è ‚Äî –∑–∞–º—ñ–Ω–∏ –π–æ–≥–æ –Ω–∞ 0. –í—Å—ñ —ñ–Ω—à—ñ —á–∏—Å–ª–∞ –∑–∞–ª–∏—à –±–µ–∑ –∑–º—ñ–Ω.

list_for_task_22 = []

for i in list_for_tasks:
    if i >= 0:
        list_for_task_22.append(i)
    else:
        list_for_task_22.append(0)

print(f'–ó–∞–º—ñ–Ω–∞ –º—ñ–Ω—É—Å–æ–≤–æ–≥–æ —á–∏—Å–ª–∞ –Ω–∞ –Ω—É–ª—å: {list_for_task_22}')

# Task 8

x_23 = int(input("–í–≤–µ–¥—ñ—Ç—å –±–∞–∂–∞–Ω—É –¥–æ–≤–∂–∏–Ω—É —Ä—è–¥–∫–∞: "))
list_for_task_23 = []

for i in range(len(list_of_words)):
    if len(list_of_words[i]) > x_23:
        list_for_task_23.append(list_of_words[i])

print(f'–í —Å–ø–∏—Å–∫—É –∑–Ω–∞–π–¥–µ–Ω–æ {len(list_for_task_23)} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑ –¥–æ–≤–∂–∏–Ω–æ—é –±—ñ–ª—å—à–µ –∑–∞ {x_23}')

# Task 9

# –°–ø–∏—Å–∫–∏ –¥–ª—è —Ü—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é chat gpt.

emotions = ["happy", "sad", "excited", "angry"]
emojis = ["üòä", "üò¢", "ü§©", "üò°"]
list_for_task_24 = []

for i in range(len(emotions)):
    list_for_task_24.append(emotions[i])
    list_for_task_24.append(emojis[i])

print(f'–°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–µ–Ω–∏–π –∑ {emotions} —Ç–∞ {emojis}: {list_for_task_24}')

# Task 10

x_25 = int(input("–ß–∏—Å–ª–æ –≤ —Å–ø–∏—Å–∫—É –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–µ –∑–∞: "))
y_25 = int(input("–Ø–∫—â–æ —á–∏—Å–ª–æ –º–µ–Ω—à–µ, –º–Ω–æ–∂–∏–º–æ –π–æ–≥–æ –Ω–∞: "))
list_for_task_25 = []

for i in list_for_tasks:
    if i > x_25:
        list_for_task_25.append(i * y_25)

print(f'–ï–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –±—ñ–ª—å—à–µ –∑–∞ {x_25}, –ø–æ–º–Ω–æ–∂–µ–Ω—ñ –Ω–∞ {y_25}: {list_for_task_25}')